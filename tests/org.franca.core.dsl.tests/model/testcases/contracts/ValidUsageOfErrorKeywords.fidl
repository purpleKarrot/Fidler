package a.b.c
typeCollection TC {
	enumeration Errors {
		Error
	}
	enumeration OtherErrors {
		OtherError
	}
}
interface InterfaceTest {
	method forceEnumError {
		error TC.Errors
	}
	contract {
		vars {
			TC.Errors savedError;
			TC.OtherErrors otherError;
		}
			
		PSM {
			initial start
			state start {
				on error forceEnumError [errordef.Error == TC.Errors.Error] -> start
				on error forceEnumError [errordef.Error == errorval] -> start
				on error forceEnumError [errorval == savedError] -> start
				on error forceEnumError [errordef.Error == savedError] -> start
			}
		}
	}
}
